diff -rcNB modules-4.2.1.orig/init/bash.in modules-4.2.1/init/bash.in
*** modules-4.2.1.orig/init/bash.in	2018-11-11 06:51:17.000000000 -0800
--- modules-4.2.1/init/bash.in	2019-01-06 20:07:01.927095126 -0800
***************
*** 1,3 ****
--- 1,9 ----
+ 
+ @silentshdbgsupport@init_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" > /dev/null && pwd)"
+ @silentshdbgsupport@modules_dir=$(dirname ${init_dir})
+ @silentshdbgsupport@edapack_dir=$(dirname ${modules_dir})
+ @silentshdbgsupport@tclsh=${edapack_dir}/tcl/bin/tclsh8.6
+ @silentshdbgsupport@
  @silentshdbgsupport@unset _mlshdbg;
  @silentshdbgsupport@# disable shell debugging for the run of this init file
  @silentshdbgsupport@if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
***************
*** 36,43 ****
  @quarantinesupport@
  # define module command and surrounding initial environment (default value
  # for MODULESHOME, MODULEPATH, LOADEDMODULES and parse of init/.modulespath)
! @quarantinesupport@_mlcode=`${_mlre:-}@TCLSH@ @libexecdir@/modulecmd.tcl bash autoinit`
! @notquarantinesupport@_mlcode=`@TCLSH@ @libexecdir@/modulecmd.tcl bash autoinit`
  _mlret=$?
  
  @quarantinesupport@# clean temp variables used to setup quarantine
--- 42,49 ----
  @quarantinesupport@
  # define module command and surrounding initial environment (default value
  # for MODULESHOME, MODULEPATH, LOADEDMODULES and parse of init/.modulespath)
! @quarantinesupport@_mlcode=`${_mlre:-}${tclsh} ${modules_dir}/libexec/modulecmd.tcl bash autoinit`
! @notquarantinesupport@_mlcode=`${tclsh} ${modules_dir}/libexec/modulecmd.tcl bash autoinit`
  _mlret=$?
  
  @quarantinesupport@# clean temp variables used to setup quarantine
***************
*** 54,64 ****
  
  @compatversion@   # redefine module command if compat version has been activated
  @compatversion@   if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
! @compatversion@      MODULES_CMD=@libexecdir@/modulecmd-compat; export MODULES_CMD
  @compatversion@      if [ -t 2 ]; then
! @compatversion@         _module_raw() { eval `@libexecdir@/modulecmd-compat bash $*`; }
  @compatversion@      else
! @compatversion@         module() { eval `@libexecdir@/modulecmd-compat bash $*`; }
  @compatversion@      fi
  @compatversion@   fi
  @compatversion@
--- 60,70 ----
  
  @compatversion@   # redefine module command if compat version has been activated
  @compatversion@   if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
! @compatversion@      MODULES_CMD=${modules_dir}libexec/modulecmd-compat; export MODULES_CMD
  @compatversion@      if [ -t 2 ]; then
! @compatversion@         _module_raw() { eval `${modules_dir}/libexec/modulecmd-compat bash $*`; }
  @compatversion@      else
! @compatversion@         module() { eval `${modules_dir}/libexec/modulecmd-compat bash $*`; }
  @compatversion@      fi
  @compatversion@   fi
  @compatversion@
***************
*** 73,85 ****
  @compatversion@      typeset swfound=1
  @compatversion@      if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
  @compatversion@         typeset swname='main'
! @compatversion@         if [ -e @libexecdir@/modulecmd.tcl ]; then
  @compatversion@            typeset swfound=0
  @compatversion@            unset MODULES_USE_COMPAT_VERSION
  @compatversion@         fi
  @compatversion@      else
  @compatversion@         typeset swname='compatibility'
! @compatversion@         if [ -e @libexecdir@/modulecmd-compat ]; then
  @compatversion@            typeset swfound=0
  @compatversion@            MODULES_USE_COMPAT_VERSION=1; export MODULES_USE_COMPAT_VERSION
  @compatversion@         fi
--- 79,91 ----
  @compatversion@      typeset swfound=1
  @compatversion@      if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
  @compatversion@         typeset swname='main'
! @compatversion@         if [ -e ${modules_dir}/libexec/modulecmd.tcl ]; then
  @compatversion@            typeset swfound=0
  @compatversion@            unset MODULES_USE_COMPAT_VERSION
  @compatversion@         fi
  @compatversion@      else
  @compatversion@         typeset swname='compatibility'
! @compatversion@         if [ -e ${modules_dir}/libexec/modulecmd-compat ]; then
  @compatversion@            typeset swfound=0
  @compatversion@            MODULES_USE_COMPAT_VERSION=1; export MODULES_USE_COMPAT_VERSION
  @compatversion@         fi
***************
*** 88,94 ****
  @compatversion@      # switch version only if command found
  @compatversion@      if [ $swfound -eq 0 ]; then
  @compatversion@         echo "Switching to Modules $swname version"
! @compatversion@         source @initdir@/bash
  @compatversion@      else
  @compatversion@         echo "Cannot switch to Modules $swname version, command not found"
  @compatversion@         return 1
--- 94,100 ----
  @compatversion@      # switch version only if command found
  @compatversion@      if [ $swfound -eq 0 ]; then
  @compatversion@         echo "Switching to Modules $swname version"
! @compatversion@         source ${init_dir}/bash
  @compatversion@      else
  @compatversion@         echo "Cannot switch to Modules $swname version, command not found"
  @compatversion@         return 1
***************
*** 99,127 ****
     # setup ENV variables to get module defined in sub-shells (works for 'sh'
     # and 'ksh' in interactive mode and 'sh' (zsh-compat), 'bash' and 'ksh'
     # (zsh-compat) in non-interactive mode.
!    ENV=@initdir@/profile.sh; export ENV
!    BASH_ENV=@initdir@/bash; export BASH_ENV
  
     # enable completion only in interactive mode
     if [ ${BASH_VERSINFO:-0} -ge 3 ] && [[ $- =~ i ]] &&
!       [ -r @initdir@/bash_completion ]; then
!       source @initdir@/bash_completion
     fi
  @setbinpath@
! @setbinpath@   if [[ ! ":$PATH:" =~ ':@bindir@:' ]]; then
! @setbinpath@@prependbinpath@      PATH=@bindir@${PATH:+:}$PATH; export PATH
! @setbinpath@@appendbinpath@      PATH=$PATH${PATH:+:}@bindir@; export PATH
  @setbinpath@   fi
  @setmanpath@
  @setmanpath@@usemanpath@   manpath=`manpath 2>/dev/null`
  @setmanpath@@notusemanpath@   manpath=${MANPATH:-}
! @setmanpath@   if [[ ! ":$manpath:" =~ ':@mandir@:' ]]; then
! @setmanpath@@prependmanpath@      MANPATH=@mandir@${manpath:+:}$manpath; export MANPATH
! @setmanpath@@appendmanpath@      MANPATH=$manpath${manpath:+:}@mandir@; export MANPATH
  @setmanpath@   fi
  fi
  
  unset _mlcode _mlret
  @silentshdbgsupport@
  @silentshdbgsupport@# restore shell debugging options if disabled
  @silentshdbgsupport@if [ -n "${_mlshdbg:-}" ]; then
--- 105,135 ----
     # setup ENV variables to get module defined in sub-shells (works for 'sh'
     # and 'ksh' in interactive mode and 'sh' (zsh-compat), 'bash' and 'ksh'
     # (zsh-compat) in non-interactive mode.
!    ENV=${init_dir}/profile.sh; export ENV
!    BASH_ENV=${init_dir}/bash; export BASH_ENV
  
     # enable completion only in interactive mode
     if [ ${BASH_VERSINFO:-0} -ge 3 ] && [[ $- =~ i ]] &&
!       [ -r ${init_dir}/bash_completion ]; then
!       source ${init_dir}/bash_completion
     fi
  @setbinpath@
! @setbinpath@   if [[ ! ":$PATH:" =~ ':${modules_dir}/bin:' ]]; then
! @setbinpath@@prependbinpath@      PATH=${modules_dir}/bin${PATH:+:}$PATH; export PATH
! @setbinpath@@appendbinpath@      PATH=$PATH${PATH:+:}${modules_dir}/bin; export PATH
  @setbinpath@   fi
  @setmanpath@
  @setmanpath@@usemanpath@   manpath=`manpath 2>/dev/null`
  @setmanpath@@notusemanpath@   manpath=${MANPATH:-}
! @setmanpath@   if [[ ! ":$manpath:" =~ ':${modules_dir}/share/man:' ]]; then
! @setmanpath@@prependmanpath@      MANPATH=${modules_dir}/share/man${manpath:+:}$manpath; export MANPATH
! @setmanpath@@appendmanpath@      MANPATH=$manpath${manpath:+:}${modules_dir}/share/man; export MANPATH
  @setmanpath@   fi
  fi
  
  unset _mlcode _mlret
+ unset init_dir modules_dir edapack_dir
+ 
  @silentshdbgsupport@
  @silentshdbgsupport@# restore shell debugging options if disabled
  @silentshdbgsupport@if [ -n "${_mlshdbg:-}" ]; then
